buildscript {
	repositories {
		maven { url  = 'https://plugins.gradle.org/m2/' }
	}
}

plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
	id 'com.matthewprenger.cursegradle' version '1.4.0'
}
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	//Geckolib
	maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }

	//Fabric
	maven { url  "https://oss.sonatype.org/content/repositories/releases/" }
	maven { url  "https://maven.dblsaiko.net/" }
	maven { url  "https://server.bbkr.space:8081/artifactory/libs-release/" }
	mavenLocal()

	//OwOLib
	maven { url 'https://maven.wispforest.io' }
}

dependencies {
	//Geckolib
	modImplementation 'software.bernie.geckolib:geckolib-fabric-1.19:3.1.18'

	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//OwOLib
	modImplementation "io.wispforest:owo-lib:${project.owo_version}"
	// only if you plan to use owo-config
	annotationProcessor modImplementation("io.wispforest:owo-lib:${project.owo_version}")
	// include this if you don't want force your users to install owo
	// sentinel will warn them and give the option to download it automatically
	include "io.wispforest:owo-sentinel:${project.owo_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
